# Cursor Rules for SODA MMQC Project


## Project-Specific Rules
- Follow the existing project structure and naming conventions
- Use the established configuration patterns from `soda_mmqc/config.py`
- Maintain consistency with existing test patterns in `tests/`
- For checklist development, follow the existing directory structure in `data/checklist/`
- For checklist development, respect the structure of `data/examples` and maintain consistency with existing example organization
- Always install new dependencise by updating `requirements.txt` and then installing in the virtual environment.

## Code Quality
- Write tests for new functionality
- Avoid hardcoding values - use configuration files
- Use environment variables for sensitive data

## Documentation
- Update README.md when adding new features

## Common Mistakes to Avoid
- Don't forget to activate the virtual environment (`.venv`) before running commands, experiments, or unit tests
- Don't forget to update requirements.txt when adding dependencies
- Don't create verbose summaries using `echo` or Python `print` statements when the work already speaks for itself through code changes and test results

## Testing Guidelines
- Write unit tests for all new functions
- Use pytest fixtures for common test data
- Mock external API calls in tests unless testing the API itself
- Test both success and error cases
- Don't add `sys.path.insert(0, os.path.abspath(os.path.dirname(os.path.dirname(__file__))))` to unit tests - use proper package imports instead 